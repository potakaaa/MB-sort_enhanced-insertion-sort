- Copy and paste on "benchmark_run10x.py"
- Change test_range depending on range of numbers


**For random:**
test_range = 10
# 1-10 at 10 datas
test_10x(enhanced_insertion, "MB Sort", test_range, 10)
test_10x(insertionSort, "Insertion Sort", test_range, 10)

# 1-10 at 1_000 datas 
test_10x(enhanced_insertion, "MB Sort", test_range, 1_000)
test_10x(insertionSort, "Insertion Sort", test_range, 1_000)

# 1-10 at 100_000 datas
test_10x(enhanced_insertion, "MB Sort", test_range, 100_000)
test_10x(insertionSort, "Insertion Sort", test_range, 100_000)


**For sorted:**
test_range = 10
# 1-10 at 10 datas
test_10x_sorted(enhanced_insertion, "MB Sort", test_range, 10)
test_10x_sorted(insertionSort, "Insertion Sort", test_range, 10)

# 1-10 at 1_000 datas 
test_10x_sorted(enhanced_insertion, "MB Sort", test_range, 1_000)
test_10x_sorted(insertionSort, "Insertion Sort", test_range, 1_000)

# 1-10 at 100_000 datas
test_10x_sorted(enhanced_insertion, "MB Sort", test_range, 100_000)
test_10x_sorted(insertionSort, "Insertion Sort", test_range, 100_000)


**For nearly sorted:**
test_range = 10
# 1-10 at 10 datas
test_10x_n_sorted(enhanced_insertion, "MB Sort", test_range, 10)
test_10x_n_sorted(insertionSort, "Insertion Sort", test_range, 10)

# 1-10 at 1_000 datas 
test_10x_n_sorted(enhanced_insertion, "MB Sort", test_range, 1_000)
test_10x_n_sorted(insertionSort, "Insertion Sort", test_range, 1_000)

# 1-10 at 100_000 datas
test_10x_n_sorted(enhanced_insertion, "MB Sort", test_range, 100_000)
test_10x_n_sorted(insertionSort, "Insertion Sort", test_range, 100_000)


**For reverse sorted:** 
test_range = 10
# 1-10 at 10 datas
test_10x_r_sorted(enhanced_insertion, "MB Sort", test_range, 10)
test_10x_r_sorted(insertionSort, "Insertion Sort", test_range, 10)

# 1-10 at 1_000 datas 
test_10x_r_sorted(enhanced_insertion, "MB Sort", test_range, 1_000)
test_10x_r_sorted(insertionSort, "Insertion Sort", test_range, 1_000)

# 1-10 at 100_000 datas
test_10x_r_sorted(enhanced_insertion, "MB Sort", test_range, 100_000)
test_10x_r_sorted(insertionSort, "Insertion Sort", test_range, 100_000)